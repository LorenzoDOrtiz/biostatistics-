setwd("C:/Users/ortizlo/OneDrive - Central Washington University/BIO 213 Lab/Lab 3")
binom.test(13,22,.4038,"two.sided")
binom.test(13,22,.4038,"greater")
binom.test(13,22,.4038,"two.sided")
barplot(x, col="gray", ylim=c(0, 1), ylab="Proportion of
cannibalistic matings")
barplot(13/22, col="gray", ylim=c(0, 1), ylab="Proportion of
cannibalistic matings")
segments(0.7, y1, 0.7, y2, lwd = 1, col="black")
segments(0.7, 0.3635470, 0.7, 0.7929069, lwd = 1, col="black")
abline(.4038,0,lty=3, col = "red")
var(bluegill$Length)
var(bluegill$Length)
bluegill <- read.table(file = "lab2.csv", header = TRUE, sep = ",")
library(readxl)
Lab3_DATA_1_ <- read_excel("Lab3_DATA (1).xlsx")
View(Lab3_DATA_1_)
View(Lab3_DATA_1_)
View(Lab3_DATA_1_)
remove(Lab3_DATA_1_)
bluegill <- read.table(file = "lab2.csv", header = TRUE, sep = ",")
setwd("C:/Users/ortizlo/OneDrive - Central Washington University/BIO 213 Lab/Lab 2")
bluegill <- read.table(file = "lab2.csv", header = TRUE, sep = ",")
bluegill
bluegill$Length
hist(bluegill$Length)
hist(bluegill$Length, main = "", xlab = "Length (mm)", ylab = " Number of individuals", col = "seagreen1")
hist(bluegill$Length, freq = FALSE, col = "gray", xlab = "Length (mm)", ylab = "Density", main = "", ylim = c(0,0.015))
curve(dnorm(x, mean(bluegill$Length), sd(bluegill$Length)), from = 50,to = 200, type = "l", lwd = 3, col = "blue", add = TRUE)
length5 <- sample(bluegill$Length, 5, replace = T)
length5
length10 = sample(bluegill$Length, 10, replace = T)
length20 = sample(bluegill$Length, 20, replace = T)
length50 = sample(bluegill$Length, 50, replace = T)
lengths <- c(bluegill$Length, length5, length10, length20, length50)
labels <- c(rep("Population", 888), rep("N = 05", 5), rep("N = 10",10), rep("N = 20", 20), rep("N = 50", 50))
boxplot(lengths ~ labels, ylab = "Length (mm)", col = "gray")
plotmeans(lengths ~ labels, xlab = "Sample Size", ylab = "Length (mm)", connect = FALSE, n.label = FALSE)
setwd("C:/Users/ortizlo/OneDrive - Central Washington University/BIO 213 Lab/Lab 3")
antlion <- read.table(file = "Lab3_DATA.csv", header = TRUE, sep = ",")
remove bluegill
remove(bluegill)
summary(antlion)
ant.table #call variable
ant.table #call variable
ant.table #call variable
ant.table = table(antlion$antlion.pits) #create variable
ant.table #call variable
observered <- as.vector(ant.tables)
observered <- as.vector(ant.tables)
observered <- as.vector(ant.table)
probs <- dpois(0:8, mean(dataframe_name$antlion.pits)) #Make a vector of the expected frequencies of each number of ant lion pits per quadrat using the command:
probs <- dpois(0:8, mean(antlion$antlion.pits)) #Make a vector of the expected frequencies of each number of ant lion pits per quadrat using the command:
completed.table <- rbind(ant.table, expected) #Next we’re going to bind the expected frequencies to the observed values to build a plot. We’re going to do this by binding a row to the end of the table.
expected <- probs*length(dataframe_name$antlion.pits) #  Make a vector of the expected frequencies of each number of ant lion pits per quadrat using the command:
expected <- probs*length(antlion$antlion.pits) #  Make a vector of the expected frequencies of each number of ant lion pits per quadrat using the command:
completed.table <- rbind(ant.table, expected) #Next we’re going to bind the expected frequencies to the observed values to build a plot. We’re going to do this by binding a row to the end of the table.
row.names(completed.table) <- c("Observed", "Expected")
barplot(completed.table, beside=T, xlab="Quadrants", ylab="Antlion Pits", col=c("black", "gray"))
View(completed.table)
View(completed.table)
View(completed.table)
View(completed.table)
barplot(completed.table, beside=T, xlab="Antlion Pits", ylab="Quadrants", col=c("black", "gray"))
summary(completed.table)
summary(completed.table)
chisq.test(x, p = prob, rescale.p = T)
View(completed.table)
View(completed.table)
chisq.test(observed, p = probs, rescale.p = T)
chisq.test(observered, p = probs, rescale.p = T)
data(Titanic)
Titanic
titanic.table = apply(Titanic, c(2, 4), sum)
titanic.table
mosaicplot(titanic.table, col = c("gray", "white"), main = "")
chisq.test(titanic.table)
